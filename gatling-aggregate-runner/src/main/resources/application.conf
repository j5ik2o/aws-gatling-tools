gatling {
  notice {
    slack {
      incoming-webhook-url = ${?GATLING_NOTICE_SLACK_INCOMING_WEBHOOK_URL}
    }
    chatwork {
      host = ${?GATLING_NOTICE_CHATWORK_HOST}
      room-id = ${?GATLING_NOTICE_CHATWROK_ROOM_ID}
      token = ${?GATLING_NOTICE_CHATWORK_TOKEN}
    }
  }
  ecs-cluster-name = ${GATLING_ECS_CLUSTER_NAME}
  task-definition = ${GATLING_TASK_DEFINITION}
  count = ${GATLING_COUNT}
  subnets = [${GATLING_SUBNET}]
  assign-public-ip = "ENABLED"
  container-override-name = "gatling-runner"
  log-prefix = "api-server/"
  environments = {
    "AWS_REGION": ${AWS_REGION},
    "GATLING_TARGET_ENDPOINT_BASE_URL": ${GATLING_TARGET_ENDPOINT_BASE_URL},
    "GATLING_PAUSE_DURATION": ${GATLING_PAUSE_DURATION},
    "GATLING_HOLD_DURATION": ${GATLING_HOLD_DURATION},
    "GATLING_RAMP_DURATION": ${GATLING_RAMP_DURATION},
    "GATLING_RESULT_DIR": "target/gatling",
    "GATLING_S3_BUCKET_NAME": ${GATLING_BUCKET_NAME},
    "GATLING_SIMULATION_CLASS": ${GATLING_SIMULATION_CLASS},
    "GATLING_USERS": ${GATLING_USERS}
  }
  reporter {
    task-definition = ${GATLING_REPORTER_TASK_DEFINITION}
    container-override-name = "gatling-s3-reporter"
    environments = {
      "AWS_REGION": ${AWS_REGION},
      "GATLING_BUCKET_NAME" : ${GATLING_BUCKET_NAME}
    }
  }
}